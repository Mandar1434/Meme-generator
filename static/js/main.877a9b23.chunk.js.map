{"version":3,"sources":["Header.js","MemeGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["Header","MemeGenerator","useState","upperText","setUpperText","bottomText","setBottomText","randomImg","setRandomImg","allImgs","setAllImgs","useEffect","fetch","then","response","json","memes","data","className","onSubmit","e","preventDefault","rndNumber","Math","floor","random","length","rndMemeImg","url","type","placeholder","value","onChange","target","src","alt","Meme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAMeA,MAHf,WACE,OAAO,oE,OCqCMC,MAtCf,WAA0B,IAAD,EACWC,mBAAS,KADpB,mBAChBC,EADgB,KACLC,EADK,OAEaF,mBAAS,KAFtB,mBAEhBG,EAFgB,KAEJC,EAFI,OAGWJ,mBAAS,KAHpB,mBAGhBK,EAHgB,KAGLC,EAHK,OAION,mBAAS,IAJhB,mBAIhBO,EAJgB,KAIPC,EAJO,KAsBvB,OAhBAC,qBAAU,WACRC,MAAM,sCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAa,IACTE,EAAUF,EAASG,KAAnBD,MACRN,EAAWM,QAEd,IAUD,gCACE,uBAAME,UAAU,YAAYC,SATX,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWhB,EAAQiB,QAC/CC,EAAalB,EAAQa,GAAWM,IACtCpB,EAAamB,IAKX,UACE,uBAAOE,KAAK,OAAOC,YAAY,YAAYC,MAAO5B,EAAW6B,SAAU,SAAAZ,GAAC,OAAIhB,EAAagB,EAAEa,OAAOF,UAElG,uBAAOF,KAAK,OAAOC,YAAY,cAAcC,MAAO1B,EAAY2B,SAAU,SAAAZ,GAAC,OAAId,EAAcc,EAAEa,OAAOF,UACtG,4CAEF,sBAAKb,UAAU,OAAf,UACE,qBAAKgB,IAAK3B,EAAW4B,IAAI,KACzB,oBAAIjB,UAAU,MAAd,SAAqBf,IACrB,oBAAIe,UAAU,SAAd,SAAwBb,WCtBjB+B,MATf,WACE,OACE,sBAAKlB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.877a9b23.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./App.css\"\r\n\r\nfunction Header() {\r\n  return <header>Welcome to Meme Generator App</header>\r\n}\r\nexport default Header\r\n","import React, { useState, useEffect } from \"react\"\r\nimport \"./App.css\"\r\n\r\nfunction MemeGenerator() {\r\n  const [upperText, setUpperText] = useState(\" \")\r\n  const [bottomText, setBottomText] = useState(\" \")\r\n  const [randomImg, setRandomImg] = useState(\" \")\r\n  const [allImgs, setAllImgs] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetch(\" https://api.imgflip.com/get_memes\")\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        const { memes } = response.data\r\n        setAllImgs(memes)\r\n      })\r\n  }, [])\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    const rndNumber = Math.floor(Math.random() * allImgs.length)\r\n    const rndMemeImg = allImgs[rndNumber].url\r\n    setRandomImg(rndMemeImg)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"meme-form\" onSubmit={handleSubmit}>\r\n        <input type=\"text\" placeholder=\"Uppe Text\" value={upperText} onChange={e => setUpperText(e.target.value)} />\r\n\r\n        <input type=\"text\" placeholder=\"Bottom Text\" value={bottomText} onChange={e => setBottomText(e.target.value)} />\r\n        <button>GEN</button>\r\n      </form>\r\n      <div className=\"meme\">\r\n        <img src={randomImg} alt=\"\" />\r\n        <h2 className=\"top\">{upperText}</h2>\r\n        <h2 className=\"bottom\">{bottomText}</h2>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default MemeGenerator\r\n","import React from \"react\"\nimport Header from \"./Header\"\nimport MemeGenerator from \"./MemeGenerator\"\nimport \"./App.css\"\n\nfunction Meme() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MemeGenerator />\n    </div>\n  )\n}\n\nexport default Meme\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}